{"version":3,"file":"delete.min.js","sources":["../src/delete.js"],"sourcesContent":["define(['jquery', 'core/modal_factory', 'core/modal_events', 'core/ajax','core/notification'],\n    function($,ModalFactory,ModalEvents,Ajax,Notification){\n        let trigger = $('.delete-btn');\n\n        let postid = null;\n        let modid = null;\n        let action = null;\n\n\n        var clickedInstanceBtn = null;\n        let posttype = '';\n\n        $(\".delete-btn\").click(function (e) { \n            e.preventDefault();\n            clickedInstanceBtn = $(this);\n\n            postid = clickedInstanceBtn.data('postid');\n            modid = clickedInstanceBtn.data('modid');\n            action = clickedInstanceBtn.data('action');\n\n\n            if (action.includes('deletepost'))\n                posttype = \"Post\";\n            else \n                posttype = \"Comment\";\n        });\n\n        \n\n        ModalFactory.create({\n            type: ModalFactory.types.DELETE_CANCEL,\n            title: \"Delete \" + posttype,\n            body: \"Are you sure you'd like to continue? This action cannot be undone\",\n            large: false,\n        }, trigger)\n            .done(function(modal){\n\n                modal.getRoot().on(ModalEvents.delete, function(e){\n                    e.preventDefault();\n\n                    postid = clickedInstanceBtn.data('postid');\n                    modid = clickedInstanceBtn.data('modid');\n                    action = clickedInstanceBtn.data('action');\n\n                    let request = {\n                        methodname: 'mod_knowledgeshare_delete_post_or_reply',\n                        args: {\n                            itemid: postid,\n                            modid: modid,\n                            action: action\n                        }\n                    };\n\n                    Ajax.call([request])[0].done(function(result){\n                        if(result)\n                            window.location.reload();\n                        else\n                        {\n                            Notification.addNotification({\n                                message: \"Failed to delete\",\n                                type: 'error',\n                            });\n                        }\n                    }).fail(function(error) {\n                        console.log(error);\n                    });\n                    \n                });\n\n            });\n\n\n    }\n);"],"names":["define","$","ModalFactory","ModalEvents","Ajax","Notification","trigger","postid","modid","action","clickedInstanceBtn","posttype","click","e","preventDefault","this","data","includes","create","type","types","DELETE_CANCEL","title","body","large","done","modal","getRoot","on","delete","request","methodname","args","itemid","call","result","window","location","reload","addNotification","message","fail","error","console","log"],"mappings":"AAAAA,mCAAO,CAAC,SAAU,qBAAsB,oBAAqB,YAAY,sBACrE,SAASC,EAAEC,aAAaC,YAAYC,KAAKC,kBACjCC,QAAUL,EAAE,eAEZM,OAAS,KACTC,MAAQ,KACRC,OAAS,SAGTC,mBAAqB,SACrBC,SAAW,GAEfV,EAAE,eAAeW,OAAM,SAAUC,GAC7BA,EAAEC,iBACFJ,mBAAqBT,EAAEc,MAEvBR,OAASG,mBAAmBM,KAAK,UACjCR,MAAQE,mBAAmBM,KAAK,SAChCP,OAASC,mBAAmBM,KAAK,UAI7BL,SADAF,OAAOQ,SAAS,cACL,OAEA,aAKnBf,aAAagB,OAAO,CAChBC,KAAMjB,aAAakB,MAAMC,cACzBC,MAAO,UAAYX,SACnBY,KAAM,oEACNC,OAAO,GACRlB,SACEmB,MAAK,SAASC,OAEXA,MAAMC,UAAUC,GAAGzB,YAAY0B,QAAQ,SAAShB,GAC5CA,EAAEC,iBAEFP,OAASG,mBAAmBM,KAAK,UACjCR,MAAQE,mBAAmBM,KAAK,SAChCP,OAASC,mBAAmBM,KAAK,cAE7Bc,QAAU,CACVC,WAAY,0CACZC,KAAM,CACFC,OAAQ1B,OACRC,MAAOA,MACPC,OAAQA,SAIhBL,KAAK8B,KAAK,CAACJ,UAAU,GAAGL,MAAK,SAASU,QAC/BA,OACCC,OAAOC,SAASC,SAGhBjC,aAAakC,gBAAgB,CACzBC,QAAS,mBACTrB,KAAM,aAGfsB,MAAK,SAASC,OACbC,QAAQC,IAAIF"}